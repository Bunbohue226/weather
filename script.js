const API_KEY = "cc8510b0bb874587ac7161837250202";

const translations = {
    vi: {
      title: "Th·ªùi Ti·∫øt",
      weatherBtn: "Xem Th·ªùi Ti·∫øt",
      temperatureInfo: "Nhi·ªát ƒë·ªô hi·ªán t·∫°i l√†",
      season: "M√πa",
      error: "Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau!",
      advice: "H√£y b·∫≠t ƒëi·ªÅu h√≤a ƒë·ªÉ gi·ªØ m√°t!",
      coatAdvice: "H√£y m·∫∑c th√™m √°o ·∫•m, nhi·ªát ƒë·ªô hi·ªán t·∫°i l√†",
      enjoyOutdoors: "H√£y ra ngo√†i tr·ªùi t·∫≠n h∆∞·ªüng kh√¥ng kh√≠ trong l√†nh!"
    },
    en: {
      title: "Weather",
      weatherBtn: "Check Weather",
      temperatureInfo: "Current temperature is",
      season: "Season",
      error: "Could not fetch weather data. Please try again later!",
      advice: "Turn on the air conditioner to stay cool!",
      coatAdvice: "Put on a coat, the current temperature is",
      enjoyOutdoors: "Go outside and enjoy the fresh air!"
    }
};

let currentLang = 'vi';  // M·∫∑c ƒë·ªãnh ng√¥n ng·ªØ l√† Ti·∫øng Vi·ªát

// H√†m thay ƒë·ªïi ng√¥n ng·ªØ
function changeLanguage() {
  const lang = document.getElementById('languageSwitcher').value;
  currentLang = lang;
  updateContent();
}

// H√†m c·∫≠p nh·∫≠t n·ªôi dung theo ng√¥n ng·ªØ
function updateContent() {
  document.getElementById('title').innerText = translations[currentLang].title;
  document.getElementById('weatherBtn').innerText = translations[currentLang].weatherBtn;
}

// H√†m l·∫•y ƒë·ªãa ch·ªâ IP
async function getIp() {
  const response = await fetch("https://api64.ipify.org?format=json");
  const data = await response.json();
  return data.ip;
}

// H√†m l·∫•y v·ªã tr√≠ t·ª´ IP
async function getLocation(ip) {
  const response = await fetch(`http://ip-api.com/json/${ip}`);
  const data = await response.json();
  return data;
}

// H√†m l·∫•y nhi·ªát ƒë·ªô t·ª´ WeatherAPI
async function getTemperature(lat, lon) {
  const response = await fetch(`http://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${lat},${lon}&aqi=no`);
  const data = await response.json();
  return data.current.temp_c;
}

// H√†m x√°c ƒë·ªãnh m√πa hi·ªán t·∫°i
function getSeason() {
  const month = new Date().getMonth() + 1;  // getMonth() tr·∫£ v·ªÅ gi√° tr·ªã t·ª´ 0 ƒë·∫øn 11
  if (month >= 1 && month <= 4) {
    return currentLang === 'vi' ? "M√πa Xu√¢n" : "Spring";
  } else if (month >= 5 && month <= 8) {
    return currentLang === 'vi' ? "M√πa H·∫°" : "Summer";
  } else if (month >= 9 && month <= 11) {
    return currentLang === 'vi' ? "M√πa Thu" : "Fall";
  } else {
    return currentLang === 'vi' ? "M√πa ƒê√¥ng" : "Winter";
  }
}

// H√†m in nhi·ªát ƒë·ªô v·ªõi m√†u s·∫Øc v√† l·ªùi khuy√™n
function printTemperature(nhiet_do, season) {
  let colorCode = '';
  let advice = '';

  // C√°c ƒëi·ªÅu ki·ªán ki·ªÉm tra nhi·ªát ƒë·ªô v√† l·ªùi khuy√™n
  if (nhiet_do <= 15) {
    colorCode = 'blue'; // M√†u xanh n∆∞·ªõc bi·ªÉn
    advice = translations[currentLang].coatAdvice + ` ${nhiet_do}¬∞C.`; // C·∫ßn ·ªü nh√† gi·ªØ ·∫•m
  } else if (nhiet_do > 15 && nhiet_do <= 20) {
    colorCode = 'green'; // M√†u xanh l√° c√¢y
    advice = translations[currentLang].coatAdvice + ` ${nhiet_do}¬∞C.`; // C·∫ßn m·∫∑c √°o ·∫•m khi ra ngo√†i
  } else if (nhiet_do > 20 && nhiet_do <= 30) {
    colorCode = 'yellow'; // M√†u v√†ng
    advice = translations[currentLang].enjoyOutdoors; // H√£y t·∫≠n h∆∞·ªüng kh√¥ng kh√≠ ngo√†i tr·ªùi
  } else if (nhiet_do > 30) {
    colorCode = 'red'; // M√†u ƒë·ªè
    advice = translations[currentLang].advice; // H√£y b·∫≠t ƒëi·ªÅu h√≤a ho·∫∑c qu·∫°t
  }

  return `
    <span style="color: ${colorCode}; font-weight: bold;">
      ${translations[currentLang].temperatureInfo} ${nhiet_do}¬∞C ${translations[currentLang].season} ${season}
    </span>
    <p style="color: ${colorCode}; font-weight: bold;">${advice}</p>
  `;
}

// H√†m x·ª≠ l√Ω v√† hi·ªÉn th·ªã k·∫øt qu·∫£
async function getWeatherData() {
  try {
    const ip = await getIp();
    const locationData = await getLocation(ip);
    const lat = locationData.lat;
    const lon = locationData.lon;
    const city = locationData.city;

    const nhiet_do = await getTemperature(lat, lon);
    const season = getSeason();

    const weatherInfo = `
      <p><strong>üìç ƒê·ªãa ch·ªâ IP || IP adress: </strong>${locationData.query}</p>
      <p><strong>üìç Qu·ªëc gia || country : </strong>${locationData.country}</p>
      <p><strong>üìç T·ªânh/Th√†nh ph·ªë  || Province/City : </strong>${city}</p>
      ${printTemperature(nhiet_do, season)}
    `;

    document.getElementById('weatherOutput').innerHTML = weatherInfo;

  } catch (error) {
    console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error);
    document.getElementById('weatherOutput').innerHTML = `<p>${translations[currentLang].error}</p>`;
  }
}
